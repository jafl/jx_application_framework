name: Sonar
on:
  push:
    branches:
      - utf8
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.4.0.2170
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: sonar_output
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Sonar app cache
        id: cache-sonar-app-2
        uses: actions/cache@v2
        with:
          path: $HOME/.sonar
          key: ${{ runner.os }}-sonar-app
      - name: Sonar data cache
        id: cache-sonar
        uses: actions/cache@v2
        with:
          path: ${{ env.BUILD_WRAPPER_OUT_DIR }}
          key: ${{ runner.os }}-${{ env.BUILD_WRAPPER_OUT_DIR }}
      - name: Get reflex version
        run: |
          export REFLEX_VERSION=`make -f Makefile-versions reflex`
          echo $REFLEX_VERSION
      - name: Check reflex version
        run: |
          echo $REFLEX_VERSION
      - name: RE/flex cache
        id: cache-reflex
        uses: actions/cache@v2
        with:
          path: misc/reflex
          key: ${{ runner.os }}-reflex-${{ env.REFLEX_VERSION }}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download and set up sonar-scanner
        if: steps.cache-sonar-app.outputs.cache-hit != 'true'
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - name: Download and set up build-wrapper
        if: steps.cache-sonar-app.outputs.cache-hit != 'true'
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
      - name: Add sonar binaries to path
        run: |
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: Run build-wrapper
        run: |
          echo $PATH;
          ls -lR $HOME/.sonar/
          ./configure
          export LC_ALL=en_US.UTF-8
          export LANG=en_US.UTF-8
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make default
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
