on:
  workflow_call:
    secrets:
      sonar-token:
        required: true

jobs:
  build-ubuntu:
    name: Analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: sonar_output
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment variables
        run: |
          echo SONAR_CACHE_PATH=$HOME/$BUILD_WRAPPER_OUT_DIR >> $GITHUB_ENV
          echo FORCE_CACHE_UPDATE=${RANDOM}${RANDOM} >> $GITHUB_ENV

      - name: Sonar data cache
        uses: actions/cache@v4
        with:
          path: ${{ env.SONAR_CACHE_PATH }}
          key: ${{ runner.os }}-sonar-cache-${{ env.FORCE_CACHE_UPDATE }}
          restore-keys: |
            ${{ runner.os }}-sonar-cache-

      - name: Install build-wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5.3.1

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: cpp

      - name: Configure
        run: ./configure ci

      - name: Build
        run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make

      - name: Run sonar-scanner
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        with:
          args: >
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
