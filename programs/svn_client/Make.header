# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

JX_ROOT := ../..

# Directories to search for header files

SEARCHDIRS := -I./code \
              -I${JX_ROOT}/include/jcore \
              -I${JX_ROOT}/include/jx \
              -I${JX_ROOT}/include/jfs \
              ${shell xml2-config --cflags}

# other constants

PROG_NAME         := nps_svn_client
PROG_VERSION      := ${shell cat release/VERSION}
SIGNATURE         := nps_svn_client
MENU_STRINGS_FILE := ./strings/${PROG_NAME}_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${filter-out %/${PROG_NAME}_menu_strings, \
                    ${shell echo strings/*}} strings/version

include ${JX_ROOT}/include/make/jx_config
include ${JX_ROOT}/include/make/jfs_constants

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} ${SEARCHDIRS}

# library dependencies

LIB_DEPS := ${JX_ROOT}/lib/libjcore.a \
            ${JX_ROOT}/lib/libjx.a \
            ${JX_ROOT}/lib/libjfs.a

# make variables

LOADLIBES := ${J_STD_LIBS}
ifdef J_SYSTEM_HAS_SHARED_LIBS
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

#####

.PHONY : default
default: libs ${PROG_NAME}

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/app_targets

#
# string data
#

.PHONY : strings
strings: build_version_string
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kSVNDefaultStringData ./code/svnStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db ${PROG_NAME}_us

${PROG_NAME}:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ./code/svnActionDefs.h ${JX_ROOT}/include/jx/jXActionDefs.h ${JX_ROOT}/include/jx/JXTEBase.cpp \
     -m */*.cpp ${JX_ROOT}/include/jx/*.cpp ${JX_ROOT}/include/jfs/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: ${PROG_NAME}
	@strip ${call EXE, ${PROG_NAME}}
  ifneq (${J_WANT_INSTALL},0)
	@cp ${PROG_NAME} ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/${PROG_NAME}

#
# binary distributions
#

PROG := ${PROG_NAME}-${PROG_VERSION}

PROG_RELEASE_TAR_NAME := ${PROG_NAME}_${PROG_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/${PROG_NAME}_${PROG_VERSION}.tar
RPM_SPEC_FILE := ./release/pkg/${PROG_NAME}.spec

DEB_CTRL_FILE := ./release/pkg/${PROG_NAME}.debctrl
DEB_PKG_FILE  := nps-svn-client_${PROG_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs default
	@${J_STRIP_DEBUG} ${call EXE, ${PROG_NAME}}
	@${MAKE} PKG_PATH=${PROG} DOC_NAME="${PROG_NAME}" DOC_HEADER=code/svnHelpText.h init_tarball
	@ln -s ../${call EXE,${PROG_NAME}} ${PROG}/${call EXE,${PROG_NAME}}
	@${MAKE} PKG_PATH=${PROG} SOURCE_TAR_NAME=${PROG_RELEASE_TAR_NAME} build_pkgs

#
# personal install
#

.PHONY : personal
personal: default
	@cp ${PROG_NAME} ${HOME}/bin/
	@${J_STRIP_DEBUG} ${call EXE, ${HOME}/bin/${PROG_NAME}}

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
