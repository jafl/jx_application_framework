# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := ../..

CODEDIR    := ./code
STRINGDIR  := ./strings
JCOREDIR   := ${JX_ROOT}/include/jcore
JXDIR      := ${JX_ROOT}/include/jx
JEXPRDIR   := ${JX_ROOT}/include/jexpr
J2DPLOTDIR := ${JX_ROOT}/include/j2dplot

JLIBDIR       := ${JX_ROOT}/lib
JCORELIBDIR   := ${JX_ROOT}/libjcore
JXLIBDIR      := ${JX_ROOT}/libjx
JEXPRLIBDIR   := ${JX_ROOT}/libjexpr
J2DPLOTLIBDIR := ${JX_ROOT}/libj2dplot

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${JCOREDIR} \
              -I${JXDIR} \
              -I${JEXPRDIR} \
              -I${J2DPLOTDIR}

# other constants

LEIBNITZ_VERSION  := ${shell cat release/VERSION}
SIGNATURE         := leibnitz
LN_STRING_FILES   := ${filter-out %/leibnitz_menu_strings, \
                       ${shell echo strings/*}} strings/version
MENU_STRINGS_FILE := ${STRINGDIR}/leibnitz_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${LN_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/j2dplot_constants
include ${JX_ROOT}/include/make/jexpr_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               ${J_COMPILE_DEBUG} ${SEARCHDIRS}

TOUCHPATHS := ${JCORELIBDIR} ${JXLIBDIR} ${JEXPRLIBDIR} ${J2DPLOTLIBDIR}

# library dependencies

ifndef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjexpr-${JEXPR_LIB_VERSION}.a \
              ${JLIBDIR}/libj2dplot-${J2DPLOT_LIB_VERSION}.a
endif

# make variables

LOADLIBES := -L${JLIBDIR} ${lj2dplot} ${ljexpr} ${J_STD_LIBS}
ifdef J_BUILD_SHARED_LIB
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

DEBUG_LOADLIBES := -L${JLIBDIR} \
                   ${J_BEGIN_LINK_STATIC} \
                   ${lj2dplot} ${ljexpr} \
                   ${ljx} ${ljcore} ${J_STATIC_LINK_ACE_LIBS} \
                   ${J_END_LINK_STATIC} \
                   ${J_DYNAMIC_LINK_ACE_LIBS} \
                   ${J_X11_LIBS} ${J_IMG_LIBS} ${J_GCC_LIBS}

#####

.PHONY : default
default: libs leibnitz

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/jx_targets

#
# string data
#

.PHONY : strings
strings: build_version_string
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kTHXDefaultStringData ${CODEDIR}/thxStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db leibnitz_us

leibnitz:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ${JXDIR}/jXActionDefs.h ${JXDIR}/JXTEBase.cpp \
     -m ${CODEDIR}/*.cpp ${JXDIR}/*.cpp ${JEXPRDIR}/*.cpp ${J2DPLOTDIR}/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: leibnitz
	@strip ${call EXE, leibnitz}
  ifneq (${J_WANT_INSTALL},0)
	@cp leibnitz ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/leibnitz

#
# binary distributions
#

LN := Leibnitz-${LEIBNITZ_VERSION}

LN_RELEASE_TAR_NAME := Leibnitz_${LEIBNITZ_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/Leibnitz_${LEIBNITZ_VERSION}.tar
RPM_SPEC_FILE := ./release/pkg/leibnitz.spec

DEB_CTRL_FILE := ./release/pkg/leibnitz.debctrl
DEB_PKG_FILE  := leibnitz_${LEIBNITZ_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs static menu_strings
	@${MAKE} PKG_PATH=${LN} init_tarball
	@ln -s ../${call EXE,leibnitz} ${LN}/${call EXE,leibnitz}
	@${MAKE} PKG_PATH=${LN} SOURCE_TAR_NAME=${LN_RELEASE_TAR_NAME} build_pkgs

#
# debugging version
#

.PHONY : debug
debug: staticACE libs
	@${RM} leibnitz
	@${MAKE} "LOADLIBES=${DEBUG_LOADLIBES}" leibnitz

#
# static binary
#

.PHONY : static
static: debug
	@${J_STRIP_DEBUG} ${call EXE, leibnitz}

#
# internal beta version
#

.PHONY : ibeta
ibeta: static
	@tar -czf ${HOME}/leibnitz.tgz leibnitz
	@cp leibnitz ${HOME}/bin/leibnitz_stable

#
# personal install
#

.PHONY : personal
personal: static
	@cp leibnitz ${HOME}/bin/

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
