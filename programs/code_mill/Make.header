# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := ../..

CODEDIR  := ./code
JCOREDIR := ${JX_ROOT}/include/jcore
JXDIR    := ${JX_ROOT}/include/jx

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore
JXLIBDIR    := ${JX_ROOT}/libjx

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${JCOREDIR} \
              -I${JXDIR}

# other constants

PROG_NAME         := code_mill
PROG_VERSION      := ${shell cat VERSION}
SIGNATURE         := code_mill
PROG_STRING_FILES := ${filter-out %/code_mill_menu_strings, \
                       ${shell echo strings/*}}
MENU_STRINGS_FILE := strings/code_mill_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${PROG_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               ${J_COMPILE_DEBUG} ${SEARCHDIRS}

TOUCHPATHS := ${JCORELIBDIR} ${JXLIBDIR}

# library dependencies

ifndef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a
endif

# make variables

LOADLIBES := ${J_STD_LIBS}
ifdef J_BUILD_SHARED_LIB
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

DEBUG_LOADLIBES := -L${JLIBDIR} \
                   ${J_BEGIN_LINK_STATIC} \
                   ${ljx} ${ljcore} ${J_ACE_LIBS} \
                   ${J_END_LINK_STATIC} \
                   ${J_X11_LIBS} ${J_GCC_LIBS}

#####

.PHONY : default
default: libs ${PROG_NAME}

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/jx_targets

#
# string data
#

.PHONY : strings
strings:
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kGFGDefaultStringData ${CODEDIR}/gfgStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db ${PROG_NAME}_us

${PROG_NAME}:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ${CODEDIR}/gfgActionDefs.h ${JXDIR}/jXActionDefs.h ${JXDIR}/JXTEBase.cpp \
     -m */*.cpp ${JXDIR}/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: ${PROG_NAME}
	@strip ${call EXE, ${PROG_NAME}}
  ifneq (${J_WANT_INSTALL},0)
	@cp ${PROG_NAME} ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/${PROG_NAME}

#
# binary distributions
#

CM := Code_Mill-${PROG_VERSION}

CM_RELEASE_TAR_NAME := Code_Mill_${PROG_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/Code_Mill_${PROG_VERSION}.tar
RPM_SPEC_FILE := ./pkg/code_mill.spec

DEB_CTRL_FILE := ./pkg/code_mill.debctrl
DEB_PKG_FILE  := code-mill_${PROG_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs static menu_strings
	@${MAKE} PKG_PATH=${CM} DOC_NAME="Code Mill" DOC_HEADER=code/gfgHelpText.h init_tarball
	@ln -s ../${call EXE,${PROG_NAME}} ${CM}/${call EXE,${PROG_NAME}}
	@${MAKE} PKG_PATH=${CM} SOURCE_TAR_NAME=${CM_RELEASE_TAR_NAME} build_pkgs

#
# debugging version
#

.PHONY : debug
debug: staticACE libs
	@${RM} ${PROG_NAME}
	@${MAKE} "LOADLIBES=${DEBUG_LOADLIBES}" ${PROG_NAME}

#
# static binary
#

.PHONY : static
static: debug
	@${J_STRIP_DEBUG} ${call EXE, ${PROG_NAME}}

#
# personal install
#

.PHONY : personal
personal: static
	@cp ${PROG_NAME} ${HOME}/bin/

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
