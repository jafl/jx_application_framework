# This file was automatically generated by makemake.
# Do not edit it directly!
# Any changes you make will be silently overwritten.


# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := ../../../..

CODEDIR  := .
JCOREDIR := ${JX_ROOT}/include/jcore

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore
ACELIBDIR   := ${JX_ROOT}/ACE

# Directories to search for header files

SEARCHDIRS := -I- \
              -I${CODEDIR} \
              -I${JCOREDIR}

# makemake variables

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               ${J_COMPILE_DEBUG} ${SEARCHDIRS}

# library dependencies

ifdef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.so
else
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a
endif

# make variables

LOADLIBES := ${J_STD_LIBS}
LDFLAGS   := 

#####

.PHONY : default
default: libs test

.PHONY : Makefiles
Makefiles:

#
# required libraries
#

.PHONY : libs
libs:
	@cd ${JCORELIBDIR}; ${MAKE}

.PHONY : touch
touch::
	@cd ${JCORELIBDIR}; ${MAKE} TOUCHSTRING=${TOUCHSTRING} touch

#
# debugging version
#

DEBUG_LOADLIBES := -L${JLIBDIR} \
                   -Xlinker -Bstatic \
                   ${ljcore} ${J_ACE_LIBS} \
                   -Xlinker -Bdynamic \
                   ${J_GCC_LIBS}

.PHONY : debug
debug: staticACE libs
	@${RM} test
	@${MAKE} "LOADLIBES=${DEBUG_LOADLIBES}" test

.PHONY : staticACE
staticACE:
	@cd ${ACELIBDIR}; ${MAKE} static


# This is what makemake added


# test

test :: test.o ${LIB_DEPS}
  ifeq (${suffix test}, .a)
	@${RM} $@
	${AR} crs $@ ${filter-out %.a %.so, $^}
  else
  ifeq (${suffix test}, .so)
	${LINKER} -shared ${LDFLAGS} -o $@ ${filter-out %.a %.so, $^} ${LOADLIBES}
  else
	${LINKER} ${LDFLAGS} -o $@ ${filter-out %.a %.so, $^} ${LOADLIBES}
  endif
  endif

# list of all source files

MM_ALL_TARGETS := test

# target for making everything

.PHONY : all
all: ${MM_ALL_TARGETS}

# target for removing all object files

.PHONY : tidy
tidy::
	@${RM} core test.o

# target for removing all object files

.PHONY : clean
clean:: tidy
	@${RM} ${MM_ALL_TARGETS}

# list of all source files

MM_ALL_SOURCES := test.cc

# target for checking a source file

CHECKSYNTAXFILE := ${basename ${filter %${CHECKSTRING}, ${MM_ALL_SOURCES}}}

.PHONY : checksyntax
checksyntax:
  ifneq (${CHECKSYNTAXFILE},)
	@${MAKE} ${addsuffix .o, ${CHECKSYNTAXFILE}}
  else
	@echo No target to make ${CHECKSTRING}
  endif


# target for touching appropriate source files

.PHONY : touch
touch::
	@list=`grep -l ${TOUCHSTRING} ${MM_ALL_SOURCES}`; \
     for file in $$list; do { echo $$file; touch $$file; } done
	@for path in ${TOUCHPATHS}; do \
     ( if cd $$path; then ${MAKE} TOUCHSTRING=${TOUCHSTRING} touch; fi ) \
     done


# target for calculating dependencies (MAKEMAKE)

.PHONY : jdepend
jdepend:
	@${MAKEMAKE} --depend Makefile -- ${DEPENDFLAGS} --  test.cc test.o


# DO NOT DELETE THIS LINE -- makemake depends on it.

test.o: ../../../../include/jcore/JArray.h ../../../../include/jcore/JBroadcaster.h ../../../../include/jcore/JCollection.h ../../../../include/jcore/JIndexRange.h ../../../../include/jcore/JMinMax.h ../../../../include/jcore/JMinMax.tmpl ../../../../include/jcore/JMinMax.tmpls ../../../../include/jcore/JOrderedSet.h ../../../../include/jcore/JOrderedSetIterator.h ../../../../include/jcore/JPtrArray.h ../../../../include/jcore/JRTTIBase.h ../../../../include/jcore/JString.h ../../../../include/jcore/instantiate_template.h ../../../../include/jcore/jAssert.h ../../../../include/jcore/jNew.h ../../../../include/jcore/jTypes.h ../../../../include/jcore/regex.h /usr/include/limits.h /usr/include/stdlib.h /usr/include/string.h /usr/include/sys/types.h

