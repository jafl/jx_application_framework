0

CBMacroHelp

"<html>
<head>
<title> Macros </title>
</head>

<h3> Character Actions </h3>

Character Actions provide a way to automatically type a sequence of characters
after you type a particular character.  As an example, when writing C code, you
could have the editor automatically type return after you type a semicolon.

<h3> Macros </h3>

Macros provide shortcuts for typing sequences of characters.  A macro is activated
by typing the shortcut and then pressing Tab or Control-Space.  As an example, when
writing C code, you could type <tt>#\"</tt> and then Tab could activate the macro
that converts this into <tt>#include \"\"</tt>.
<p>
<a href=jxhelp:CBCompleterHelp>Keyword completion</a> provides the complementary
functionality of completing words regardless of how much you have already typed.
This is checked <em>after</em> macros so that macros can end with ordinary characters.
<p>
You can turn off the special behavior of Tab in the <a href=jxhelp:CBEditorHelp#Prefs>
Text Editor Preferences</a> dialog.  To insert a Tab character without triggering the
macro, hold down the Shift key.

<h3> Specifying actions and macros </h3>

You can create sets of actions and macros in the dialog obtained from the
\"Macros...\" item on the Preferences menu in each
<a href=jxhelp:CBEditorHelp>Text Editor</a> window.
<p>
In this dialog, the left columns contain the action or macro, while the right
columns contain the keystrokes to perform.  In the right column, all characters except
for backslash (\\) and dollar ($) translate directly to keystrokes.  Backslash
indicates a special character as follows:

<pre>
    \\n    newline (return)
    \\t    tab
    \\b    backspace
    \\f    forward delete
    \\l    left arrow
    \\r    right arrow
    \\u    up arrow
    \\d    down arrow
    \\\\    backslash
    \\$    dollar symbol
</pre>

If any other character is preceded by a backslash, the backslash is simply removed.
<p>
Dollar is used to indicate a variable or a command to be executed:

<ul>
<li> <tt>$(...)</tt> -- execute command inside parentheses <br>
     The output of the command is treated as a sequence of keystrokes.
     This construct is nestable.  The above special characters are not
     interpreted in the output of a command, so commands wishing to
     manipulate the cursor position must print the actual ASCII value
     of up/down/left/right.
<p>
<li> <tt>$f</tt> -- full path and file name
<li> <tt>$p</tt> -- path
<li> <tt>$n</tt> -- file name
<li> <tt>$r</tt> -- file name root
<li> <tt>$s</tt> -- file name suffix (including the period)
<li> <tt>$l</tt> -- line number of caret
<li> <tt>$t</tt> -- the line of text preceding the caret
</ul>

To get a right parenthesis inside a command, use <tt>\\)</tt>.  Similarly, to get a
dollar symbol, use <tt>\\$</tt>.
<p>
The characters typed by actions and macros do not trigger other actions or macros because
it is very hard to avoid infinite loops and because it is much clearer if each keystroke
script is self-contained.

<h3> Examples </h3>

For C/C++, the following actions can be useful:

<dl>
<dt> <tt>;</tt> -&gt <tt>\\n</tt>
<dd> Starts a new line every time you type a semicolon.
<p>
<dt> <tt>{</tt> -&gt <tt>\\n}\\u\\n</tt>
<dd> This creates the closing brace and then puts the caret on a blank line between
     the braces.
</dl>

For C/C++, the following macros can be useful:

<dl>
<dt> <tt>/*</tt> -&gt; <tt>  */\\l\\l\\l</tt>
<dd> Closes the comment (note the two spaces in front of <tt>*/</tt>) and puts
     the caret inside so you can type the text.
<p>
<dt> <tt>#\"</tt> -&gt; <tt>\\binclude \"\"\\l</tt>
<dd> Produces <tt>#include \"\"</tt> and puts the caret between the quotes so
     you can type the file name.
<p>
<dt> <tt>#&lt;</tt> -&gt; <tt>\\binclude &lt;&gt;\\l</tt>
<dd> Produces <tt>#include &lt;&gt;</tt> and puts the caret between the brackets so
     you can type the file name.
</dl>

For HTML, the following macros can be useful:

<dl>
<dt> <tt>&lt;a</tt> -&gt; <tt> href=\"\"&gt;\\l\\l</tt>
<dd> Fills in the anchor tag (note the space in front of <tt>href</tt>) and puts
     the caret between the quotes so you can type the URL.
<p>
<dt> <tt>&lt;b</tt> -&gt; <tt>&gt;&lt/b&gt;\\l\\l\\l\\l</tt>
<dd> Creates the closing boldface tag and puts the caret between the tags so you
     can type the text.
<p>
<dt> <tt>&lt;ul</tt> -&gt; <tt>&gt;\\n&lt;li&gt; \\n&lt;/ul&gt;\\u</tt>
<dd> Creates a single item and the closing list tag and puts the caret after the
     item tag so you can type the text.
</dl>

For XML, the following actions can be useful:

<dl>
<dt> <tt>&gt;</tt> -&gt; <tt>$(xml-auto-close $t)</tt>
<dd> If &gt; closes an opening tag, automatically inserts a closing tag.  <tt>xml-auto-close</tt> is included in the Code Crusader package.
</dl>

</html>"
