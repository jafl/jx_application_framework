0

CBCompleterHelp

"<html>
<head>
<title> Keyword completion </title>
</head>

Keyword completion allows you to type the beginning of a word and then press Tab,
Control-Space, or Control-Shift-Space to complete the word automatically.  As an
example, when writing C code, you could type <tt>cont</tt> and then Tab would
complete it to give <tt>continue</tt>.
(<a href=jxhelp:CBMacroHelp>Macros</a> provide the complementary functionality of
automating specific, repetitive typing tasks.  These are checked before keyword
completion so that they can end with ordinary characters.  Control-Shift-Space is
provided as a trigger for keyword completion so macros can be ignored if necessary.)
<p>
You can turn off the special behavior of Tab in the <a href=jxhelp:CBEditorHelp#Prefs>
Text Editor Preferences</a> dialog.  To insert a Tab character without triggering the
completion mechanism, hold down the Shift key.
<p>
If the text matches more than one keyword, completion will fill in as many characters
as possible.  As an example, in C, <tt>r</tt> matches <tt>register</tt>, <tt>return</tt>,
and <tt>reinterpret_cast</tt>, but they all start with <tt>re</tt>, so pressing Tab
after <tt>r</tt> will add <tt>e</tt>.  You can then type another character and press Tab
again.  (e.g. typing <tt>t</tt> would complete the word to <tt>return</tt>)
<p>
If you press Tab and nothing is added, you can press Tab again to display a menu of
all the matching completions.  The first ten choices have the shortcuts 1, 2, ..., 9, 0,
and the next twenty-size choices have the shortcuts a, b, ..., z,
so you can avoid using the mouse most of the time.  To close the menu without selecting
anything, press Tab again.  To insert a tab character via the menu, select the first item,
which has the shortcut ` (single back quote).
<p>
The words that can be completed are the reserved keywords for the language (see below),
any words that you enter into the bottom list in the corresponding dialog for
<a href=jxhelp:CBStylerHelp>context-sensitive highlighting</a>, and all class
names and methods in all open projects.

<h3> Bourne Shell </h3>

All the reserved keywords are included by default.

<h3> C/C++ </h3>

All the reserved keywords from the latest draft standard are included by default.

<h3> Eiffel </h3>

All the reserved keywords are included by default.

<h3> FORTRAN </h3>

All the reserved keywords and intrinsic function names are included by default.

<h3>  HTML </h3>

Only the names of <a href=http://www.w3.org/TR/html401/sgml/entities.html>special characters</a>
are included by default because it is a feature
of HTML that there is no fixed list of tags, and the common tags are all very
short.  If you frequently use any long tags, simply enter them into the context-sensitive
highlighting dialog.  Usually, it is more convenient to create a
<a href=jxhelp:CBMacroHelp>macro</a> for each tag because this can initialize the attributes
at the same time.

<h3> Java </h3>

All the reserved keywords and special method names are included by default.

<h3> Perl </h3>

Only the basic reserved keywords are included by default since the list of
available functions is nearly infinite.

<h3> PHP </h3>

Only the basic reserved keywords are included by default since the list of
available functions is nearly infinite.

<h3> Python </h3>

All the reserved keywords are included by default.

</html>"
