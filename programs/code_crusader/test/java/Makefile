# This file was automatically generated by makemake.
# Do not edit it directly!
# Any changes you make will be silently overwritten.


# Edit this file to define constants and custom build targets.
# Please refer to the makemake documentation for more information.

# Java compiler

JAVAC  := javac
JFLAGS  = 
JAR    := jar

%.class : %.java
	${JAVAC} ${JFLAGS} $<

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.


# This is what makemake added


# hello_world

hello_world :: ./code/HelloWorld.java ./code/test.java ./code/test2.java ./code/test.jar ./code/stuff/test3.java
	${JAVAC} ${JFLAGS} -classpath ${JPATH}:${filter %.jar %.zip %.class, $^} ${filter-out %.jar %.zip %.class, $^}
  ifeq (${suffix hello_world}, .jar)
	${JAR} -cf $@ ${filter-out %.jar %.zip, $^}
  else
  ifeq (${suffix hello_world}, .zip)
	zip $@ ${filter-out %.jar %.zip, $^}
  endif
  endif

# list of all targets

MM_ALL_TARGETS := hello_world

# target for making everything

.PHONY : all
all:: ${MM_ALL_TARGETS}

# target for removing all object files

.PHONY : tidy
tidy::
	@${RM} core ./code/HelloWorld.java ./code/test.java ./code/test2.java ./code/stuff/test3.java

# target for removing all object files

.PHONY : clean
clean:: tidy
	@${RM} ${MM_ALL_TARGETS}

# list of all source files

MM_ALL_SOURCES := ./code/HelloWorld.java ./code/test.java ./code/test2.java ./code/stuff/test3.java

# target for checking a source file

CHECKSYNTAXFILE := ${basename ${filter %${CHECKSTRING}, ${MM_ALL_SOURCES}}}

.PHONY : checksyntax
checksyntax:
  ifneq (${CHECKSYNTAXFILE},)
	@${MAKE} ${addsuffix .o, ${CHECKSYNTAXFILE}}
  else
	@echo No target to make ${CHECKSTRING}
  endif


# target for touching appropriate source files

.PHONY : touch
touch::
	@list=`grep -l ${TOUCHSTRING} ${MM_ALL_SOURCES}`; \
     for file in $$list; do { echo $$file; touch $$file; } done
ifdef TOUCHPATHS
	@for path in ${TOUCHPATHS}; do \
     ( if cd $$path; then ${MAKE} TOUCHSTRING=${TOUCHSTRING} touch; fi ) \
     done
endif


# target for calculating dependencies (MAKEMAKE, JDEPEND_INPUT_FILE)

.PHONY : jdepend
jdepend:
	@${MAKEMAKE} --depend Makefile -- ${DEPENDFLAGS} -- ${JDEPEND_INPUT_FILE}


# DO NOT DELETE THIS LINE -- makemake depends on it.

