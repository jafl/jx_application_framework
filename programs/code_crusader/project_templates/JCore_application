jx_browser_project_template 1 52  0 "root" 2  1 "Code" 1  2 "myprog.cc" 0  "./code/myprog.cc"    1 "strings" 1  2 "myprog" 0  "./strings/myprog"    T "./code/myprog.cc" "#include <JString.h>

#include <iostream.h>
#include <jAssert.h>

main()
{
	JString str(\"hello\");
	cout << str << endl;
}"T "./strings/myprog" "0

"  2 T T  0 T  1 0 0  1 0 0  T "myprog" "${LIBDEPS}"  2 "../../libjcore/code/" T "./code/" T  0    "./"  10000 1 "./" ""  "makemake"  10000 1 "makemake" ""  F "make -k"  10000 1 "make -k" ""  "make $r"  10000 2 "make $r" "" "make CHECKSTRING=$n checksyntax" ""  T T "/mnt/local/glenn/Programming/JX-2.0.0/programs/test/" 968371255 968371323  T "# To use this file, first run \"makemake\" and then run \"make\".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := ../..

CODEDIR     := ./code
JCOREDIR    := ${JX_ROOT}/include/jcore

JLIBDIR        := ${JX_ROOT}/lib
JCORELIBDIR    := ${JX_ROOT}/libjcore
ACELIBDIR      := ${JX_ROOT}/ACE

# Directories to search for header files

SEARCHDIRS := -I- \\
              -I${CODEDIR} \\
              -I${JCOREDIR} \\
              -I${JTREEDIR} \\
              -I${JTOOLBARDIR}

# other constants

PROG_NAME         := myprog
PROG_SIGNATURE    := myprog
PROG_VERSION      := 1.0.0
PROG_STRING_FILES := strings/*

# makemake variables

# This is augmented by each *_constants file
J_STRING_FILES := ${PROG_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \\
               ${J_COMPILE_DEBUG} ${SEARCHDIRS}

# library dependencies

ifdef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.so 
else
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a 
endif

# make variables

LOADLIBES := ${J_STD_LIBS}
LDFLAGS   := 

#####

.PHONY : default
default: libs ${PROG_NAME}

.PHONY : Makefiles
Makefiles:

#
# string data
#

.PHONY : strings
strings:
	compile_jstrings ${J_STRING_FILES} \\
      --code kMyDefaultStringData ${CODEDIR}/myStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db ${PROG_SIGNATURE}_us

${PROG_NAME}:: strings

#
# required libraries
#

.PHONY : libs
libs:
	@cd ${JCORELIBDIR};    ${MAKE}

.PHONY : touch
touch::
	@cd ${JCORELIBDIR};    ${MAKE} TOUCHSTRING=${TOUCHSTRING} touch

#
# install binaries
#

.PHONY : jxinstall
jxinstall: ${PROG_NAME}
	@strip ${PROG_NAME}
  ifneq (${J_WANT_INSTALL},0)
	@mv ${PROG_NAME} ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/${PROG_NAME}

#
# source distribution
#

SRC_TAR_FILE := ${PROG_NAME}_source-${PROG_VERSION}.tar.gz
SRC_FILE_DIR := ${JX}/programs/${PROG_NAME}

.PHONY : source
source:
	@cd ${J_DISTR_TAR_DIR}; \\
     tar -czf ${SRC_TAR_FILE} ${filter-out %.o %~, \\
                                ${shell cd ${J_DISTR_TAR_DIR}; echo \\
              ${addprefix ${SRC_FILE_DIR}/, \\
                README LICENSE FAQ Make.* *.fd \\
                code/* ${PROG_STRING_FILES} rpm/* } }}

#
# debugging version
#

DEBUG_LOADLIBES := -L${JLIBDIR} \\
                   -Xlinker -Bstatic \\
                   ${ljcore} ${J_ACE_LIBS} \\
                   -Xlinker -Bdynamic \\
                   ${J_GCC_LIBS}

.PHONY : debug
debug: libs
	@cd ${ACELIBDIR}; ${MAKE} static
	@${RM} ${PROG_NAME}
	@${MAKE} \"LOADLIBES=${DEBUG_LOADLIBES}\" ${PROG_NAME}
" T "# This file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

@myprog

.cc ./code/myprog

literal: ${LIBDEPS}
"   "./"  10000 0  "myprog"  10000 1 "dbase" ""  "medic -f +$l $f"  10000 1 "medic -f +$l $f" ""  T T 