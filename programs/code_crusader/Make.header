# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

JX_ROOT := ../..

# Directories to search for header files

SEARCHDIRS := -I./code \
              -I${JX_ROOT}/include/jcore \
              -I${JX_ROOT}/include/jx \
              -I${JX_ROOT}/include/jfs \
              -I${JX_ROOT}/include/reflex \
              ${shell xml2-config --cflags} \
              ${shell pkg-config --cflags editorconfig}

# other constants

JCC_VERSION       := ${shell cat release/VERSION}
SIGNATURE         := jxcb
MENU_STRINGS_FILE := ./strings/jcc_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${filter-out %/jcc_menu_strings, \
                    ${shell echo strings/*}} strings/version

include ${JX_ROOT}/include/make/jx_config
include ${JX_ROOT}/include/make/jfs_constants

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               -DJ_MAKE_BINARY_NAME=\"${firstword ${MAKE}}\" \
               -DCODE_CRUSADER ${SEARCHDIRS}

# library dependencies

LIB_DEPS := ${JX_ROOT}/lib/libjcore.a \
            ${JX_ROOT}/lib/libjx.a \
            ${JX_ROOT}/lib/libjfs.a

# make variables

LOADLIBES := -L${JX_ROOT}/lib -lreflex ${shell pkg-config --libs editorconfig} ${J_STD_LIBS}
ifdef J_SYSTEM_HAS_SHARED_LIBS
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

include make_reflex_target

#####

.PHONY : default
default: libs jcc

.PHONY : test
test:
	@cd test; make test

.PHONY : Makefiles
Makefiles:
	@cd test; makemake; ${MAKE} Makefiles

include ${JX_ROOT}/include/make/app_targets

#
# string data
#

.PHONY : strings
strings: build_version_string
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kCBDefaultStringData ./code/cbStringData.h

.PHONY : stringdb
stringdb:
	@compile_jstrings ${J_STRING_FILES} --db jxcb_us

jcc:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ./code/cbActionDefs.h ${JX_ROOT}/include/jx/jXActionDefs.h ${JX_ROOT}/include/jx/JXTEBase.cpp \
     -m ./code/*.cpp ${JX_ROOT}/include/jx/*.cpp ${JX_ROOT}/include/jfs/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: jcc
	@strip ${call EXE, jcc}
  ifneq (${J_WANT_INSTALL},0)
	@cp jcc ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/jcc

# makemake's clean invokes tidy, which does everything necessary

#
# binary distributions
#

JCC := Code_Crusader-${JCC_VERSION}

JCC_TAR_DIR := ${shell pwd}
MKMKDIR     := ${JX_ROOT}/tools/makemake

JCC_RELEASE_TAR_NAME := Code_Crusader_${JCC_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/Code_Crusader_${JCC_VERSION}.tar
RPM_SPEC_FILE := ./release/pkg/code_crusader.spec
J_RPM_GZ_LIBS += /usr/lib64/libeditorconfig.so

DEB_CTRL_FILE := ./release/pkg/code_crusader.debctrl
DEB_PKG_FILE  := code-crusader_${JCC_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs default
	@${J_STRIP_DEBUG} ${call EXE, jcc}
	@${MAKE} PKG_PATH=${JCC} init_tarball
	@ln -s ../${call EXE,jcc}   ${JCC}/${call EXE,jcc}
	@ln -s ../scripts           ${JCC}/scripts
	@ln -s ../macros            ${JCC}/macros
	@ln -s ../CPM_rules         ${JCC}/CPM_rules
	@ln -s ../project_templates ${JCC}/project_templates
	@ln -s ../text_templates    ${JCC}/text_templates
	@cp -r ${JX_ROOT}/misc/dirdiff ${JCC}/
	@cd ${MKMKDIR}; ${MAKE} JCC_TAR_DIR=${JCC_TAR_DIR}/${JCC} jcc
	@${MAKE} PKG_PATH=${JCC} SOURCE_TAR_NAME=${JCC_RELEASE_TAR_NAME} build_pkgs

#
# personal install
#

.PHONY : personal
personal: default
	@cp jcc ${HOME}/bin/
	@${J_STRIP_DEBUG} ${call EXE, ${HOME}/bin/jcc}

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
