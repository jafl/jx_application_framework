Changes from previous versions

3.4.1

Upgraded to UTF-8.

3.4.0

Replaced hardcoded exclusions of "ace/*" and "*StdInc.h" with environment
variable J_MAKEMAKE_IGNORE_PATTERN.  This defines a regular expression.
Any #include which matches is ignored.

3.3.0

Adds output file to .cvsignore.

3.2.1

To reduce Makefile size, ignores dependencies on ace/* and *StdInc.h.

3.2.0

Added --make-name option so a make binary other than the one with which
makemake was built can be invoked.

Command to build program no longer filters out .a and .so files from
dependency list.

Automatically converts between .so and .dylib, based on the current OS.

"all" target is now double colon.

3.1.0

Added code to touch target to automatically run maketouch in each directory
listed in the TOUCHPATHS variable.

3.0.2

No longer complains if there are no files to parse for dependencies because
there never are unless you are using C/C++.

3.0.1

Added --assume-autogen option.  If an included file cannot be found, and it
was included with "...", then makemake assumes that this file will be
generated during the build and placed in the including file's directory.
(If this doesn't happen, you would get an error anyway, so no harm done.)

3.0.0

All targets specified in Make.files are now defined as double colon, so
additional commands can be executed in Make.header before the target is
actually built.

Java targets are now compiled with a single call to ${JAVAC} to avoid link
errors.

Added JPATH for specifying argument to -classpath.  If a .jar file is
listed as one of the files for a target, this will automatically be added
to -classpath.

Added --define to allow prepending make code before Make.header.  This is
primarily for defining variables to allow reuse of generic Make.header
files.

Added --search-path for specifying an additional directory to search for
the input files.  This option can be used multiple times, in which case the
directories are searched in the order listed on the command line.  The
current directory (.) is always searched first.

Added option to place part of Make.header after targets generated by
makemake.

Added MM_ALL_TARGETS to provide list of all the targets from Make.files.

Renamed --bin_dir to --obj-dir since it controls the location of
intermediate object files, not final binaries.

Renamed --no_std_inc to --no-std-inc for consistency.

If the target ends with .so, the link option required to produce a shared
library is automatically included.  It should no longer be included in
LDFLAGS.

Added option --suffix-map to allow specification of the suffix of the
output file produced when compiling a source file with a particular suffix.

Added option --no-parse to avoid parsing particular source file types for
dependencies.

The suffix of the output file can be specified by placing it between the
source file suffix and the file name.  As an example, ".java .class
MyClass" tells makemake that MyClass.class will be generated from
MyClass.java.  Note that it is not usually necessary to specify this level
of detail because makemake is quite good at guessing correctly.

Fixed bug so .jar files are no longer parsed.

Fixed bug so clean, etc. use directory specified by --obj-dir.

If makemake hangs, check the FAQ on the web for ways around this.

2.9.0

Added option --no_std_inc to exclude dependencies on files in /usr/include.
This makes the resulting Makefile more portable.

2.8.0

touch target is now a double colon target so you can invoke "${MAKE}
TOUCHSTRING=${TOUCHSTRING} touch" in other directories.  This eliminates
the need for TOUCHHEADERS.

2.7.2

Added option --check to only rebuild output file if input files are newer.

Renamed option -c to --choose to avoid confusion with --check.

2.7.1

No longer generates a link command for Java programs.

2.7.0

Added --bin_dir option to allow placing .o files in a separate directory.
The argument for this option is the name of the make variable that contains
the directory in which to place the .o files.  This is primarily useful
when coupled with the method described at
http://www.newplanetsoftware.com/jcc/multi_version.html.

2.6.0

Recognizes .jar suffix and automatically invokes ${JAR}.  (You must define
the variable JAR in Make.header.  It is usually "jar".)

Fixed bug so it uses .class instead of .o for .java files.

Uses temp file to avoid overflowing command line buffer.

2.5.0

Now recognizes Java (.java) and Eiffel (.e) files.

2.4.0

Now recognizes .so as well as .a library files.

2.3.0

Adds the ability to specify arbitrary dependencies by prefixing the line
with "literal: ".  The rest of the text on the line is appended verbatim to
the dependency line, ignoring the current prefix and suffix.  This is most
useful when the text is the evaluation of a variable.

2.2.0

Adds the tidy target to delete only the .o files.  clean and tidy are now
both double colon targets so you can extend them via extra code in
Make.header.  In addition, both of these targets now use the make variable
${RM}, so they no longer generate error messages if some of the files do
not exist.

2.1.0

makedepend is no longer used, so one no longer has to specify the full path
of each source file.  Profiling shows that this runs just as fast as the
old version that used makedepend, even though the new version uses dynamic
allocation.  Dynamic allocation allows it to avoid makedepend's hard limits
on the number of dependencies.
