#ifndef _H_jNew
#define _H_jNew

/******************************************************************************
 jNew.h

	The JCore replacement for operator new.  These functions are simply an
	interface to the appropriate JMemoryManager functions.

	Copyright (C) 1997 by Dustin Laurence.  All rights reserved.
	
	Base code generated by Codemill v0.1.0

		WARNING: because of the macro definition 'new' must be #undef'd in every
		file where a non-standard new is called or where a new operator new is
		defined!  Similar remarks apply to delete.  This is rarely an issue in
		practice, however.

 *****************************************************************************/

#include <stdlib.h> // For size_t
#include <jTypes.h>

void* operator new(size_t size);
void* operator new(size_t size, const JCharacter* file, const JUInt32 line);

void* operator new[](size_t size);
void* operator new[](size_t size, const JCharacter* file, const JUInt32 line);

void operator delete(void* memory);
void operator delete[](void* memory);

void JLocateDelete(const JCharacter* file, const JUInt32 line);

#endif

// always redefine macros when jNew.h is included

/******************************************************************************
 Macros for finding new/delete locations--#undef these if you define your own
 operator new and delete or if your code calls a new with arguments, such as
 placement new!
 *****************************************************************************/

#ifdef new
#undef new
#endif
#define new new(__FILE__, __LINE__)

#ifdef delete
#undef delete
#endif
#define delete JLocateDelete(__FILE__, __LINE__), delete
