#ifndef _H_JMMHashTable
#define _H_JMMHashTable

/******************************************************************************
 JMMHashTable.h

	Interface for the JMMHashTable class.

	Copyright (C) 1997 by Dustin Laurence.

	Base code generated by Codemill v0.1.0

 *****************************************************************************/

#include "JMMTable.h"
#include "JHashTable.h"

class JMMHashTable : public JMMTable
{
public:

	JMMHashTable(JMemoryManager* manager, const bool recordDelete);
	~JMMHashTable() override;

	JSize GetAllocatedCount() const override;
	JSize GetAllocatedBytes() const override;
	JSize GetDeletedCount() const override;
	JSize GetTotalCount() const override;

	void PrintAllocated(const bool printLibrary, const bool printInternal = false) const override;
	void StreamAllocatedForDebug(std::ostream& output, const JMemoryManager::RecordFilter& filter) const override;
	void StreamAllocationSizeHistogram(std::ostream& output, const JMemoryManager::RecordFilter& filter) const override;

protected:

	void _AddNewRecord(const JMMRecord& record,
					   const bool checkDoubleAllocation) override;

	bool _SetRecordDeleted(JMMRecord* record, const void* block,
						   const JUtf8Byte* file, const JUInt32 line,
						   const bool isArray) override;

private:

	JHashTable<JMMRecord>*	itsAllocatedTable;
	JSize					itsAllocatedBytes;
	JHashTable<JMMRecord>*	itsDeletedTable;
	JSize					itsDeletedCount;	// used if itsDeletedTable==nullptr
};

#endif
