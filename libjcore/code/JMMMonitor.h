/******************************************************************************
 JMMMonitor.h

	Interface for the JMMMonitor class.

	Copyright (C) 1997 by Dustin Laurence.

	Base code generated by Codemill v0.1.0

 *****************************************************************************/

#ifndef _H_JMMMonitor
#define _H_JMMMonitor

// Superclass Header
#include "JBroadcaster.h"

class JMMRecord;

class JMMMonitor : virtual public JBroadcaster
{
public:

	~JMMMonitor() override;

protected:

	// No darn reason to allow this class to be instantiated.
	JMMMonitor();

	void Receive(JBroadcaster* sender, const Message& message) override;

	// JMemoryManager message handlers; all do nothing by default

	virtual void HandleObjectDeletedAsArray(const JMMRecord& record);
	virtual void HandleArrayDeletedAsObject(const JMMRecord& record);

	virtual void HandleUnallocatedDeletion(const JUtf8Byte* file, const JUInt32 line,
										   const bool isArray);
	virtual void HandleMultipleDeletion(const JMMRecord& thisRecord,
										const JUtf8Byte* file, const JUInt32 line,
										const bool isArray);

	virtual void HandleMultipleAllocation(const JMMRecord& thisRecord,
										  const JMMRecord& firstRecord);

private:

	// not allowed

	JMMMonitor(const JMMMonitor&) = delete;
	JMMMonitor& operator=(const JMMMonitor&) = delete;
};

#endif
