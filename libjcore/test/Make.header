# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := ../..

CODEDIR  := ./code
JCOREDIR := ${JX_ROOT}/include/jcore

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${JCOREDIR}

# makemake variables

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               -g ${SEARCHDIRS}

# make variables

LOADLIBES := ${J_IMG_LIBS} ${J_ACE_LIBS} ${J_GCC_LIBS}
LDFLAGS   := 

# tests

FAST_TESTS := \
  test_JBoolean test_JUtf8Character test_JString \
  test_JStringMatch test_JStringIterator test_JRegex \
  test_JSubstitute test_JInterpolate \
  test_jTextUtil test_JStyledTextBuffer \
  test_JBroadcaster \
  test_JArray test_JLinkedList test_JPtrArray test_JRunArray \
  test_JStack test_JQueue test_JVector test_JMatrix \
  test_JListUtil test_JPtrArrayJString \
  test_JKLRand test_jHashFunctions \
  test_JHashTable test_JStringMap test_JStringPtrMap \
  test_jFileUtil test_jFStreamUtil test_JDirInfo \
  test_jProcessUtil test_jVCSUtil test_jWebUtil test_jTime \
  test_JPipe

SLOW_TESTS := \
  test_JMessageProtocol

define run_tests
    @echo ==========
    @${foreach p, $(1), echo; echo $p; if ! ./$p; then e=1; fi;} \
     echo ==========; \
     if [[ "$$e" == "1" ]]; then false; fi
endef

#####

.PHONY : default
default: libs test

.PHONY : Makefiles
Makefiles:

.PHONY : test
test: fast-tests slow-tests

.PHONY : fast-tests
fast-tests: libs ${FAST_TESTS}
	$(call run_tests,${FAST_TESTS})
#	@echo ==========
#	@${foreach p, ${FAST_TESTS}, echo; echo $p; if ! ./$p; then e=1; fi;} \
#     echo ==========; \
#     if [[ "$$e" == "1" ]]; then false; fi

.PHONY : slow-tests
slow-tests: libs ${SLOW_TESTS}
  ifeq (${FROM_LIB},1)
	$(call run_tests,${SLOW_TESTS})
#	@echo ==========
#	@${foreach p, ${SLOW_TESTS}, echo; echo $p; if ! ./$p; then e=1; fi;} \
#     echo ==========; \
#     if [[ "$$e" == "1" ]]; then false; fi
  endif

#
# required libraries
#

.PHONY : libs
libs:
ifneq (${FROM_LIB},1)
	@cd ${JCORELIBDIR}; ${MAKE}
endif

.PHONY : touch
touch::
	@cd ${JCORELIBDIR}; ${MAKE} TOUCHSTRING=${TOUCHSTRING} touch
