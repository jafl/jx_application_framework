# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT  := ../..

CODEDIR     := ./code
MAILTREE    := ./MailTree
ADDBOOKTREE := ./ABTree

JCOREDIR := ${JX_ROOT}/include/jcore
JXDIR    := ${JX_ROOT}/include/jx
JFSDIR   := ${JX_ROOT}/include/jfs

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore
JXLIBDIR    := ${JX_ROOT}/libjx
JFSLIBDIR   := ${JX_ROOT}/libjfs

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${MAILTREE} \
              -I${ADDBOOKTREE} \
              -I${JFSDIR} \
              -I${JCOREDIR} \
              -I${JXDIR}

# other constants

ARROW_VERSION     := 2.1.0
SIGNATURE         := arrow
PROG_STRING_FILES := ${filter-out %/arrow_menu_strings, \
                      ${shell echo strings/*}}
MENU_STRINGS_FILE := strings/arrow_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${PROG_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jfs_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               ${J_COMPILE_DEBUG} ${SEARCHDIRS} 

TOUCHPATHS := ${JCORELIBDIR} ${JXLIBDIR} ${JFSLIBDIR}

# library dependencies

ifdef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.${J_SHARED_LIB_SUFFIX} \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.${J_SHARED_LIB_SUFFIX} \
              ${JLIBDIR}/libjfs-${JFS_LIB_VERSION}.${J_SHARED_LIB_SUFFIX}
else
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjfs-${JFS_LIB_VERSION}.a
endif

# make variables

LDLIBS := -L${JLIBDIR} ${ljfs} ${J_STD_LIBS}
ifdef J_BUILD_SHARED_LIB
  LDFLAGS += -Xlinker -R${RPM_LIB_PATH}
endif

DEBUG_LDLIBS := -L${JLIBDIR} \
                ${J_BEGIN_LINK_STATIC} \
                ${ljfs} ${ljx} ${ljcore} ${J_ACE_LIBS} \
                ${J_END_LINK_STATIC} \
                ${J_X11_LIBS} ${J_GCC_LIBS}

#####

.PHONY : default
default: libs arrow

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/jx_targets

#
# string data
#

.PHONY : strings
strings:
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kGMDefaultStringData ${CODEDIR}/GMStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db arrow_us

arrow:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ${JXDIR}/jXActionDefs.h ${JXDIR}/JXTEBase.cpp \
     -m ${CODEDIR}/*.cc ${JXDIR}/*.cpp ${JFSDIR}/*.cpp

#
# install
#

.PHONY : jxinstall
jxinstall: arrow
	@strip ${call EXE, arrow}
  ifneq (${J_WANT_INSTALL},0)
	@cp arrow ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/arrow

#
# Binary distributions
#

PROG := Arrow-${ARROW_VERSION}

PROG_RELEASE_TAR_NAME := Arrow_${ARROW_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/Arrow_${ARROW_VERSION}.tar
RPM_SPEC_FILE := ./pkg/arrow.spec

DEB_CTRL_FILE := ./pkg/arrow.debctrl
DEB_PKG_FILE  := arrow_${ARROW_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs static menu_strings
	@${MAKE} PKG_PATH=${PROG} DOC_NAME="Arrow" DOC_HEADER=code/GHelpText.h init_tarball
	@ln -s ../${call EXE,arrow} ${PROG}/${call EXE,arrow}
	@${MAKE} PKG_PATH=${PROG} SOURCE_TAR_NAME=${PROG_RELEASE_TAR_NAME} build_pkgs

#
# debugging version
#

.PHONY : debug
debug: staticACE libs
	@${RM} arrow
	@${MAKE} "LDLIBS=${DEBUG_LDLIBS}" arrow

#
# static binary
#

.PHONY : static
static: debug
	@${J_STRIP_DEBUG} ${call EXE, arrow}

#
# personal install
#

.PHONY : personal
personal: static
	@cp arrow ${HOME}/bin/

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
