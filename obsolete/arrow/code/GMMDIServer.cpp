/******************************************************************************
 GMMDIServer.cc

	BASE CLASS = public JXMDIServer

	Copyright © 1997 by Glenn W. Bach.  All rights reserved.

	Base code generated by Codemill v0.1.0

 *****************************************************************************/

#include <GMMDIServer.h>
#include <GMApp.h>
#include <GMailboxTreeDir.h>
#include <GMGlobals.h>
#include <jFileUtil.h>
#include <jAssert.h>

// string ID's

static const JCharacter* kCommandLineHelpID = "CommandLineHelp::GMMDIServer";

/******************************************************************************
 Constructor

 *****************************************************************************/

GMMDIServer::GMMDIServer
	(
	GMApp* app
	)
	:
	JXMDIServer()
{
	itsApp = app;
}

/******************************************************************************
 Destructor

 *****************************************************************************/

GMMDIServer::~GMMDIServer()
{
}

/******************************************************************************
 HandleMDIRequest

 *****************************************************************************/

void
GMMDIServer::HandleMDIRequest
	(
	const JCharacter* dir,
	const JPtrArray<JString>& argList
	)
{
	JString cwd = JGetCurrentDirectory();
	JChangeDirectory(dir);
	JString base(dir);
	JAppendDirSeparator(&base);
	JSize count = argList.GetElementCount();
	if (count > 1)
		{
		for (JSize i = 2; i <= count; i++)
			{
			JString arg = *(argList.NthElement(i));
			if (arg == "--mailto")
				{
				if (i == count)
					{
					cerr << "The \"mailto\" function requires an argument." << endl;
					}
				else
					{
					i++;
					assert(i <= count);
					arg = *(argList.NthElement(i));
					itsApp->NewMessage(arg);
					}
				}
			else if (arg == "--mailbox")
				{
				GGetMailboxTreeDir()->Activate();
				}
			else
				{
				if (!arg.BeginsWith("/"))
					{
					arg.Prepend(base);
					}				
				itsApp->OpenMailbox(arg);
				}
			}
		}
	else
		{
		itsApp->OpenSystemMailbox();
		}
	JChangeDirectory(cwd);

	itsApp->OpenMailboxWindowIfNeeded();
}

/******************************************************************************
 PrintCommandLineHelp (static)

 ******************************************************************************/

void
GMMDIServer::PrintCommandLineHelp()
{
	const JCharacter* map[] =
		{
		"version",   JGetString("VERSION"),
		"copyright", JGetString("COPYRIGHT")
		};
	const JString s = JGetString(kCommandLineHelpID, map, sizeof(map));
	cout << endl << s << endl << endl;
}
