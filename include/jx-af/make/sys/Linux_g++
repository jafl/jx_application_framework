##make

# configuration for compiling with g++

include ${MAKE_INCLUDE}/jx_constants

#
# Adjustable parameters
#

# Optimization level for debugging

J_DEBUG_OPTIMIZATION_LEVEL := g

# This command is used to strip debugging info but not the symbol table.

J_STRIP_DEBUG := strip -g

# Comment this out if your version of "ar" does not accept the -s option.

J_RANLIB_VIA_AR_S := -D_J_RANLIB_VIA_AR_S

# Comment this out if you don't have Xinerama

J_HAS_XINERAMA  := -D_J_HAS_XINERAMA
J_XINERAMA_LIBS := -lXinerama

# Adjust these until everything compiles

J_RAW_SYSTEM_STUFF := \
  -Wno-mismatched-new-delete \
  -DU_CHARSET_IS_UTF8=1 \
  -DACE_DISABLE_MKTEMP -DACE_DISABLE_TEMPNAM

# Convert certain issues into warnings so they can be turned off in certain situations.

J_RAW_SYSTEM_STUFF += \
  -Wno-error=overloaded-virtual \
  -Wno-error=maybe-uninitialized

ifeq ($(shell expr `gcc -dumpversion | cut -f1 -d.` \>= 12),1)
  J_RAW_SYSTEM_STUFF += \
    -Wno-error=dangling-pointer
endif

SEARCHDIRS += -I/usr/include/freetype2

#
# Nothing below this line should ever need to be changed.
#

SYS_NAME := $(shell source /etc/os-release; echo $$ID$${VERSION_ID%%.*})
SYS_ARCH := $(shell uname -m)

ifneq (${shell command -v dpkg-deb 2> /dev/null},)
  HAS_DEB  := 1
  SYS_ARCH := $(shell dpkg --print-architecture)
else ifneq (${shell command -v rpm 2> /dev/null},)
  HAS_RPM := 1
endif

# makemake variables

LINKER := g++

# make variables

ifndef CC
  CC := gcc
endif

ifndef CXX
  CXX := g++
endif

CPPFLAGS  = ${DEPENDFLAGS} ${J_OPTIMIZE_LEVEL}
CFLAGS    = 
CXXFLAGS  = -std=c++20

# libraries to link

J_GCC_LIBS := -lboost_fiber -lboost_context \
              $(shell pkg-config --libs icu-i18n libpcre) \
              -lstdc++ -lpthread -lm -lc -ldl
J_ACE_LIBS := -lACE
J_X11_LIBS := ${J_XINERAMA_LIBS} -lfontconfig -lXext -lXft -lXpm -lX11

# generate coverage part 1: ensure that all uses of J_GCC_LIBS are consistent

# lldb

J_LLDB_LIBS := -L/usr/lib64/llvm -llldb

# modify settings based on OS, compiler, etc.

include ${MAKE_INCLUDE}/jx_config_common
