# Configuration used on all platforms

#
# modify configuration based on OS, compiler, etc.
#

J_RAW_SYSTEM_STUFF += \
  -D_J_UNIX ${J_HAS_XINERAMA}

ifeq ($(shell cat ${JX_ROOT}/0-RELEASE 2>/dev/null),1)
  J_OPTIMIZE_LEVEL := -O2
else
  J_OPTIMIZE_LEVEL := -O${J_DEBUG_OPTIMIZATION_LEVEL} -g
endif

J_COMPILER_DEPEND_FLAGS_FOR_BISON := ${J_RAW_SYSTEM_STUFF}

J_COMPILER_DEPEND_FLAGS := \
  ${J_COMPILER_DEPEND_FLAGS_FOR_BISON} -Wall -Werror

SEARCHDIRS += -I${JX_INCLUDE_ROOT}/jx-af/image/jx

J_GCC_LIBS := -lxml2 ${J_GCC_LIBS}
J_IMG_LIBS := -lgd -lpng -ljpeg
J_STD_LIBS := ${J_IMG_LIBS} ${J_X11_LIBS} ${J_ACE_LIBS} ${J_GCC_LIBS}

#
# flex
#

LEX    := reflex
LFLAGS := 

# Change rule from .c to .cpp

%.c : %.l

%.cpp : %.l
	${LEX} ${LFLAGS} --outfile=$@ --header-file=$(subst .l,.h,$<) $<

#
# bison
#

YACC   := bison
YFLAGS := -d

# Change rule from .c to .cpp

%.c : %.y

%.cpp %.hpp : %.y
	@if test -e $*.hpp; then mv $*.hpp $*.hpp_old; fi
	@if ! ${YACC} ${YFLAGS} -o $*.cpp $<; then \
       if test -e $*.hpp_old; then mv $*.hpp_old $*.hpp; fi; \
       false; fi
	@if test -e $*.tab.h; then mv $*.tab.h $*.hpp; \
     elif test -e $*.cpp.h; then mv $*.cpp.h $*.hpp; fi
	@if test -e $*.hpp_old -a -z "`diff $*.hpp $*.hpp_old 2> /dev/null`"; \
     then mv $*.hpp_old $*.hpp; \
     else rm -f $*.hpp_old; fi
	@${JX_INCLUDE_ROOT}/jx-af/scripts/fix_bison_output.pl $*.cpp

#
# tar
#

TAR := tar --exclude '*/.xvpics*'

#
# useful functions
#

define run_tests
    @echo ==========; \
     echo executing updated tests; \
     mkdir -p .timestamps; \
     ${foreach p, $(1), \
       if [[ ! -f .timestamps/$p || $p -nt .timestamps/$p ]]; then \
         echo; echo $p; \
         export JMM_RECORD_ALLOCATED=yes JMM_RECORD_DEALLOCATED=yes \
                JMM_CHECK_DOUBLE_ALLOCATION=yes JMM_BROADCAST_ERRORS=yes \
                MALLOC_PERTURB_=$$(($$RANDOM % 255 + 1)); \
         if ./$p; then touch .timestamps/$p; else e=1; fi; \
       fi;} \
     echo ==========; \
     if [[ "$$e" = "1" ]]; then false; fi
endef

#
# delete modified files if process fails
#

.DELETE_ON_ERROR:
