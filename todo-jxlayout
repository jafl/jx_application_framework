keep ptr to open layouts, so can't double-open

calculate min size for open layout window to avoid negative widget height/width
	dynamic, based on existing widgets
	if elastic in dimension, allow shrink to min 5px
	use max of calculated min sizes

-----

load/save .jxl
cmd line option to generate code from layout file

palette
	just another layout window
	save in prefs -- allows rearranging, resizing, custom objects, etc

MDWidget extends JXWidget
	share drawing code with JX*Widget, where possible
	MDTabGroup: allow direct editing of all cards
	MD*Partition: set number of compartments, for direct editing
place/drag
	drag new from palette
	use DND, to drop inside another widget, e.g., scrollbarset or toolbar
resize
	like window - any edge or corner
	shift key to turn off grid
cut/copy/duplicate/delete
	serialize/deserialize
undo

widget options
	label, if appropriate
	shortcuts, if appropriate
	sizing
	variable name, local/instance
	ctor args
	validation (for input fields)
	fit-to-enclosure

align selected: top,bottom,center; right,left,center

layout options
	show grid - draw as background for MDWindow and every container type
	snap to grid (none,5,10)
	outline bounding rects
		only for non-bordered widgets, e.g., checkbox
		expand frame by +1 and set 1px border

assign fixed name for every widget to ensure stable translations

need option to control tab order
	show index in each item
	cmd-click to select item without re-ordering
	click to make object the next in list

-----

menu editor
	build visually
	remove bin/extract_menu_strings

generates id for every item
	fixed prefix, so these are excluded from toolbar config
	override to provide useful value and include in toolbar config

menu itself has id
	generates string with list of item id's + separator locations
		item-id::text
		item-idid::macshortcut - if set
		item-idid::winshortcut - if set
	construct JXTextMenu directly from this
	JXMenu broadcasts item id, not index
		all menus constructed in BuildWindow and passed to widgets
		(widgets do not need to own menu data + enum)
