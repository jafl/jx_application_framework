# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

JX_ROOT := <JX_PATH>

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore
JXLIBDIR    := ${JX_ROOT}/libjx

# Directories to search for header files

SEARCHDIRS := -I./code \
              -I${JX_ROOT}/include/jcore \
              -I${JX_ROOT}/include/jx

# other constants

APP_NAME         := <Binary>
APP_VERSION      := ${shell cat VERSION}
SIGNATURE         := <Binary>
MENU_STRINGS_FILE := ./strings/${APP_NAME}_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${filter-out %/${APP_NAME}_menu_strings, \
                    ${shell echo strings/*}} strings/version

include ${JX_INCLUDE_ROOT}/jx-af/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} <MDI_DEF> \
               ${SEARCHDIRS}

# library dependencies

LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
            ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a

# make variables

LOADLIBES := ${J_STD_LIBS}
ifdef J_SYSTEM_HAS_SHARED_LIBS
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

#####

.PHONY : default
default: libs ${APP_NAME}

.PHONY : Makefiles
Makefiles:

include ${JX_INCLUDE_ROOT}/jx-af/make/app_targets

#
# string data
#

.PHONY : strings
strings: build_version_string
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code k<PRE>DefaultStringData ./code/<pre>StringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db ${APP_NAME}_us

${APP_NAME}:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_INCLUDE_ROOT}/jx-af/scripts/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ./code/<pre>ActionDefs.h ${JX_INCLUDE_ROOT}/jx-af/jx/jXActionDefs.h ${JX_INCLUDE_ROOT}/jx-af/jx/JXTEBase.cpp \
     -m */*.cpp ${JX_INCLUDE_ROOT}/jx-af/jx/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: ${APP_NAME}
	@strip ${call EXE, ${APP_NAME}}
  ifneq (${J_WANT_INSTALL},0)
	@cp ${APP_NAME} ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/${APP_NAME}

#
# binary distributions
#

PROG := ${APP_NAME}-${APP_VERSION}

PROG_RELEASE_TAR_NAME := ${APP_NAME}_${APP_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/${APP_NAME}_${APP_VERSION}.tar
RPM_SPEC_FILE := ./release/pkg/${APP_NAME}.spec

DEB_CTRL_FILE := ./release/pkg/${APP_NAME}.debctrl
DEB_PKG_FILE  := ${APP_NAME}_${APP_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs static
	@${MAKE} PROG_DISTR_TAR_FILE=${PROG_RELEASE_TAR_NAME} distr_sub

# distr_sub (PROG_DISTR_TAR_FILE)

.PHONY : distr_sub
distr_sub: menu_strings
	@${MAKE} PKG_PATH=${PROG} init_tarball
	@ln -s ../${call EXE,${APP_NAME}} ${PROG}/${call EXE,${APP_NAME}}
	@${MAKE} PKG_PATH=${PROG} SOURCE_TAR_NAME=${PROG_DISTR_TAR_FILE} build_pkgs

#
# personal install
#

.PHONY : personal
personal: default
	@cp ${APP_NAME} ${HOME}/bin/
	@strip ${call EXE, ${HOME}/bin/${APP_NAME}}
