# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT := <JX_PATH>

CODEDIR   := ./code
STRINGDIR := ./strings
JCOREDIR  := ${JX_ROOT}/include/jcore
JXDIR     := ${JX_ROOT}/include/jx

JLIBDIR     := ${JX_ROOT}/lib
JCORELIBDIR := ${JX_ROOT}/libjcore
JXLIBDIR    := ${JX_ROOT}/libjx

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${JCOREDIR} \
              -I${JXDIR}

# other constants

PROG_NAME         := <Binary>
PROG_VERSION      := ${shell cat VERSION}
SIGNATURE         := <Binary>
PROG_STRING_FILES := ${filter-out %/${PROG_NAME}_menu_strings, \
                      ${shell echo strings/*}} strings/version
MENU_STRINGS_FILE := ${STRINGDIR}/${PROG_NAME}_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${PROG_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} <MDI_DEF> \
               ${SEARCHDIRS}

TOUCHPATHS := ${JCORELIBDIR} ${JXLIBDIR}

# library dependencies

ifdef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.${J_SHARED_LIB_SUFFIX} \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.${J_SHARED_LIB_SUFFIX}
else
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a
endif

# make variables

LOADLIBES := ${J_STD_LIBS}
ifdef J_BUILD_SHARED_LIB
  LDFLAGS   := -Xlinker -R${RPM_LIB_PATH}
endif

DEBUG_LOADLIBES := -L${JLIBDIR} \
                   ${J_BEGIN_LINK_STATIC} \
                   ${ljx} ${ljcore} ${J_STATIC_LINK_ACE_LIBS} \
                   ${J_END_LINK_STATIC} \
                   ${J_DYNAMIC_LINK_ACE_LIBS} \
                   ${J_X11_LIBS} ${J_GCC_LIBS}

#####

.PHONY : default
default: libs ${PROG_NAME}

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/jx_targets

#
# string data
#

.PHONY : strings
strings: build_version_string
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code k<PRE>DefaultStringData ${CODEDIR}/<pre>StringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db ${PROG_NAME}_us

${PROG_NAME}:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/bin/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ${CODEDIR}/<pre>ActionDefs.h ${JXDIR}/jXActionDefs.h ${JXDIR}/JXTEBase.cpp \
     -m */*.cpp ${JXDIR}/*.cpp

#
# install binaries
#

.PHONY : jxinstall
jxinstall: ${PROG_NAME}
	@strip ${call EXE, ${PROG_NAME}}
  ifneq (${J_WANT_INSTALL},0)
	@cp ${PROG_NAME} ${JX_INSTALL_ROOT}/
  endif

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/${PROG_NAME}

#
# source distribution (only useful if project is in ${JX_ROOT}/programs)
#

SRC_TAR_FILE := ${PROG_NAME}_source-${PROG_VERSION}.tar.gz
SRC_FILE_DIR := ${JX}/programs/<PROJ_DIR>

.PHONY : source
source:
	@cd ${J_DISTR_TAR_DIR}; \
     ${TAR} -czf ${SRC_TAR_FILE} ${filter-out %.o %~ %L.cpp %Y.cpp, \
                                   ${shell cd ${J_DISTR_TAR_DIR}; echo \
              ${addprefix ${SRC_FILE_DIR}/, \
                README COPYING Make.* *.jcc *.fd \
                code/* strings/* release/pkg } }}

#
# binary distributions
#

PROG := ${PROG_NAME}-${PROG_VERSION}

PROG_RELEASE_TAR_NAME := ${PROG_NAME}_${PROG_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/${PROG_NAME}_${PROG_VERSION}.tar
RPM_SPEC_FILE := ./release/pkg/${PROG_NAME}.spec

DEB_CTRL_FILE := ./release/pkg/${PROG_NAME}.debctrl
DEB_PKG_FILE  := ${PROG_NAME}_${PROG_VERSION}_i386.deb

.PHONY : release
release: pre_build_pkgs static
	@${MAKE} PROG_DISTR_TAR_FILE=${PROG_RELEASE_TAR_NAME} distr_sub

# distr_sub (PROG_DISTR_TAR_FILE)

.PHONY : distr_sub
distr_sub: menu_strings
	@${MAKE} PKG_PATH=${PROG} init_tarball
	@ln -s ../${call EXE,${PROG_NAME}} ${PROG}/${call EXE,${PROG_NAME}}
	@${MAKE} PKG_PATH=${PROG} SOURCE_TAR_NAME=${PROG_DISTR_TAR_FILE} build_pkgs

#
# debugging version
#

.PHONY : debug
debug: staticACE libs
	@${RM} ${PROG_NAME}
	@${MAKE} "LOADLIBES=${DEBUG_LOADLIBES}" ${PROG_NAME}

#
# static binary
#

.PHONY : static
static: debug
	@${J_STRIP_DEBUG} ${call EXE, ${PROG_NAME}}

#
# personal install
#

.PHONY : personal
personal: static
	@cp ${PROG_NAME} ${HOME}/bin/
